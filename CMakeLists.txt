cmake_minimum_required(VERSION 3.10)
set(PROJECTNAME example-ui) 
project(${PROJECTNAME})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})
add_executable(${PROJECTNAME} src/main.cpp)
add_definitions(-std=c++17)

set(LXGUI_BUILD_TEST FALSE)

add_subdirectory(lib/lxgui)
add_subdirectory(lib/lxgui/sol2)

find_package(Lua)
find_package(SFML COMPONENTS system window graphics)
find_package(Freetype)
find_package(PNG)
find_package(ZLIB)
find_package(GLEW)
find_package(OpenGL)

include_directories(${LUA_INCLUDE_DIR})           
include_directories(${CMAKE_SOURCE_DIR}/lib/lxgui/include)
include_directories(${CMAKE_SOURCE_DIR}/lib/lxgui/sol2/include)

target_link_libraries(${PROJECTNAME}  sfml-system)
target_link_libraries(${PROJECTNAME}  sfml-window)
target_link_libraries(${PROJECTNAME}  lxgui-sfml)
target_link_libraries(${PROJECTNAME}  sfml-graphics)
target_link_libraries(${PROJECTNAME}  lxgui-gl)
target_link_libraries(${PROJECTNAME}  ${FREETYPE_LIBRARY})
target_link_libraries(${PROJECTNAME}  ${PNG_LIBRARY})
target_link_libraries(${PROJECTNAME}  ${ZLIB_LIBRARY})
target_link_libraries(${PROJECTNAME}  ${OPENGL_LIBRARY})
target_link_libraries(${PROJECTNAME}  ${LUA_LIBRARIES})
target_link_libraries(${PROJECTNAME}  lxgui-input-sfml)
target_link_libraries(${PROJECTNAME}  lxgui)
target_link_libraries(${PROJECTNAME}  lxgui-luapp)
target_link_libraries(${PROJECTNAME}  lxgui-xml)
target_link_libraries(${PROJECTNAME}  lxgui-utils)
if(WINDOWS AND MSVC)
	target_link_libraries(${PROJECTNAME} user32)
endif()
if(UNIX AND NOT APPLE)
	target_link_libraries(${PROJECTNAME} X11 m stdc++ stdc++fs)
endif()

